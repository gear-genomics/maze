import { scaleLinear } from 'd3-scale'
import { event, select } from 'd3-selection'
import { zoom, zoomIdentity } from 'd3-zoom'
import kmers from 'k-mers'
import pako from 'pako'
import revcom from 'revcom'

const btnRun = document.getElementById('btn-run')
btnRun.addEventListener('click', run)

const btnLoadExample = document.getElementById('btn-load-example')
btnLoadExample.addEventListener('click', loadExample)

const textareaReference = document.getElementById('textarea-reference')
const textareaQuery = document.getElementById('textarea-query')

setupSequenceDropzone(textareaReference)
setupSequenceDropzone(textareaQuery)

const inputK = document.getElementById('input-k')
inputK.addEventListener('keyup', function (event) {
  if (event.key === 'Enter') {
    run()
  }
})

const containerCanvas = document.getElementById('container-canvas')

const canvas = document.getElementById('canvas')
const context = canvas.getContext('2d')

function run() {
  let reference = getSequence(textareaReference.value, 'Reference')
  let query = getSequence(textareaQuery.value, 'Query')
  let k = parseInt(inputK.value, 10)
  if (reference.seq && query.seq && Number.isInteger(k) && k > 0) {
    visualize(k, reference.seq, query.seq)
  }
}

function visualize(k, seq1, seq2) {
  const lenSeq1 = seq1.length
  const lenSeq2 = seq2.length

  const width = Math.min(
    containerCanvas.clientWidth,
    containerCanvas.clientHeight
  ) - 100
  const height = width

  canvas.width = width
  canvas.height = height

  const x = scaleLinear()
    .domain([0, lenSeq1 - 1])
    .range([0, width - 1])

  const y = scaleLinear()
    .domain([0, lenSeq2 - 1])
    .range([0, height - 1])

  const zoomBehavior = zoom()
    .on('zoom', () => { draw(event.transform) })

  select('canvas').call(zoomBehavior)

  const index = buildIndex(k, seq1)

  /*
   * this is needed to reset the transform on subsequent runs
   * note that this will run draw as a side effect, so all setup
   * has to happen beforehand
   */
  select('canvas').call(zoomBehavior.transform, zoomIdentity)

  function draw(transform) {
    context.clearRect(0, 0, width, height)

    const iterKmers = kmers(k, seq2)
    context.beginPath()
    context.strokeStyle = 'dodgerblue'
    while (true) {
      const kmer = iterKmers.next()
      if (kmer.value === undefined) {
        break
      }
      if (kmer.value in index) {
        for (let hit of index[kmer.value]) {
          const [x1, y1] = transform.apply([x(hit), y(kmer.index)])
          const [x2, y2] = transform.apply([x(hit + k), y(kmer.index + k)])
          context.moveTo(x1, y1)
          context.lineTo(x2, y2)
        }
      }
    }
    context.stroke()

    iterKmers.seek(0)
    context.beginPath()
    context.strokeStyle = 'red'
    while (true) {
      const kmer = iterKmers.next()
      if (kmer.value === undefined) {
        break
      }
      const kmerRc = revcom(kmer.value)
      if (kmerRc in index) {
        for (let hit of index[kmerRc]) {
          const [x1, y1] = transform.apply([x(hit), y(kmer.index + k)])
          const [x2, y2] = transform.apply([x(hit + k), y(kmer.index)])
          context.moveTo(x1, y1)
          context.lineTo(x2, y2)
        }
      }
    }
    context.stroke()
  }
}

function buildIndex(k, seq) {
  const index = {}
  const iterKmers = kmers(k, seq)
  while (true) {
    const kmer = iterKmers.next()
    if (kmer.value === undefined) {
      break
    }
    if (kmer.value in index) {
      index[kmer.value].push(kmer.index)
    } else {
      index[kmer.value] = [kmer.index]
    }
  }
  return index
}

function getSequence(str, id = '') {
  const ret = {
    header: '',
    id,
    seq: ''
  }
  if (str.startsWith('>')) {
    const headerEnd = str.indexOf('\n')
    ret.header = str.substring(0, headerEnd)
    const match = ret.header.match(/>\s*(\S+)/)
    if (match) {
      ret.id = match[1]
    }
    ret.seq = str.substring(headerEnd).replace(/\s+/g, '').toUpperCase()
  } else {
    ret.seq = str.replace(/\s+/g, '').toUpperCase()
  }
  return ret
}

function handleDragEnter(ev) {
  ev.stopPropagation()
  ev.preventDefault()
  ev.target.classList.add('dropzone--active')
}

function handleDragOver(ev) {
  ev.stopPropagation()
  ev.preventDefault()
}

function handleDragLeave(ev) {
  ev.stopPropagation()
  ev.preventDefault()
  ev.target.classList.remove('dropzone--active')
}

function getDroppedSequences(ev) {
  const dt = ev.dataTransfer || (ev.originalEvent && ev.originalEvent.dataTransfer)
  const files = ev.target.files || (dt && dt.files)
  const f = files[0]

  readFasta(ev.target, f)
}

function readFasta(node, f) {
  const fReader = new FileReader() /* global FileReader */
  const isGzip = /\.gz$/.test(f.name)
  if (isGzip) { // gzip
    fReader.readAsArrayBuffer(f)
  } else {
    fReader.readAsText(f)
  }
  fReader.onload = function (ev) {
    let fContent = ev.target.result
    if (isGzip) {
      fContent = pako.ungzip(fContent, { 'to': 'string' })
    }
    node.value = fContent
  }
}

function setupSequenceDropzone(node) {
  node.addEventListener('dragenter', handleDragEnter)
  node.addEventListener('dragleave', handleDragLeave)
  node.addEventListener('dragover', handleDragOver)
  node.addEventListener('drop', ev => {
    ev.stopPropagation()
    ev.preventDefault()
    ev.target.classList.remove('dropzone--active')
    getDroppedSequences(ev)
  })
}

const exampleSeq1 = 'CAGCACTTTGGGAGGCTAAGGCGGGTGGATCACCTGAGGTCAGGAGTTCAAGACCAACCTTACCAACATGGTGAGACTCTGTCTCTACTAAAAATACAAAAAATGAGCCGGGCGTGGTGGCGCATGTCTGTAGTCTCAGCTACTCAGGAGGCTGAGACAGGAGAATCAGTTGAACCCGGGAGGCAGAGGTTGCAGCGAGCCAAGATTGCACCACTGCACTCCAGCCTGGGTGACAGAGCAAGACTCTGTCCCCCCCCAAAAAAAAGGGGGAGAGAGAGAGAAAGAGAGGAGATTCCCAGACACACTACCCTTTTAAATGGTAAATGGAAAATATTAAAACTATTATTGATTTGACTCATTCGAGGCTTAACCTGTCATAAATGTATCTTCTTAATTTCTCTCCTTCAAAACTGCTTCAGAACTTTGTATGAAGCGAGAAAGTAATTACAAATATCTTAGATTTTTCTTATTGCATGGTGACAGAATAATCAATCAAAATCTGCAAAATGGAGACATTTTTCAATCTTTAAGGAAGATGTTAAAAACTAAACAAACACAGAAGAACTATGTCCAACTCTTTAAAATGAACAATGAATTCTAATTACCTCTTCTTGAAACACAATTATGGCTTCCTGGAATTGTTTTTCACTTTCCCCTGTGGCGCTCAAAAGCTTTGTGTTTTCATAGAGAGTTTCATTCACAATGCGATCAGACTGAAAATTGAAAAGTATTTTACATTATTCACGCCACAAGGTAGTATTTCAATTTTTCAAACTTCTTCAAAATTTTCAAACATCTGTGCACACACCTTAGATTTGAAAACAGCTCCTAGGATACCTGTCGCCACCTGCAGGAGCAGGATCAGAAGCAAGCCTATGAAAAACTGAAGAAGAGAAAAAGAAATATACATTATCCTCAGTGCATTCAGTAACATCTGGGGACATTCTGGCACAGCACTTCTCTCTACAGCTGGGATTATATCACAGTGAGAGTGTCAGTCACACTCTTCATTTATTCCACTTTTTACTTCAAGCTGAAAATTTTGGGTTCATTACTACTCAGAAAATTGCTCCAGAGACTGATCGAGGAAAGTGGTTCAGGCAAAAAAATTATCAAAACAACCATTGATATCTGTATGATATTGACTAGAGGGAAGTTTGAAAACTTAGATGAGTTTATTTGAGTATTATTTTACTCCTTCCCTTTCTTCATCAAACACAACCTCACACAAACTCAGAATTGGCTTTGAAACAGCATCTCCACTACATTCAGAATCACCTGGCATCTTGTTACATATATAGATTCCTGAAATCGGCTTCAGATATGCTGAATCATAAGTTTGAAGGATGCAGCCCAAAGACAATTAGCTTTTTTTTTAAACAAGCTCCTTGAGTAATTAAATTCTTCAATTGCAAATGAGGCCTTATTGTTCAAAAAGCAATCAGTAGGAATGTTATTAGAGTCCCTTTAAAACTCTGTCTCTACCGTCCCTCACAATAAACAAACAGTTTTGAACATTTTTCTCAGGTACTGATATAATCCTTACTTTATTAGAGGAATAAGTTTAGATTAGACCTGATAAACTTTTATGTCATATTTGTATCTGATAAACACTTGATTTTTTTCTAATATTTTTACTATATCCATTTTCTACTGTATATGTTAAAAGTGAATGCCTGTGAATTATCCAAACCCAATTTATCCTCCTCAATGCTCTCTAAGAGATAATTCTGATTATCTCATTCATTTAAACTTTTTTTTTAGCATGGCATGTAGAACACCTATGATTTTACCACAACCCACACTTGGATTCATCTTCCATCATTTACTGGAAACAGTTTTGCCGGTCTCCTGCCATACCCAAGGCTTCTCAGTTCCCAAACACACCAGCACTGTACTGCCACGTTGTCTTTCCGGAAAGCTTTTCCTACCCTCACTCATACAAATACCTTATTCACTTCTGCCCTGGTTTGAAAATCCCATCCCCTGTCTTGCCCTTTGCTTCTGGGGCCACTCCCACTGTAGCTATTTGCTTACTTATTAACCTTCCCTAGTAGGTTCTAAAGGTCTTATGTATTATTTCGCACAATATCTGACACATAGAGGTATGGCAGTAATGTTGAATGAGTGAATGAATGAATGGATGAATGATTAAAATTTGTCTCCTCTCAGAGTATCCTCCAGTTTCTAAGCCAAACTAAGCCAAATCTAAGCCATATCAGCTTCCACAATCAAACCTTCTAAAGAGAAGTTGGAGTTAGAGTTTCATCAATCATGGCACGTTCTTTTAACAGACAATAGGGATGGGAGAGAATCCTCTGGAGTCTGAAGGTTGGACACTGGGATTTGTTTGGAGAACTCACCAACAGAAGCATGCAGCGACTTTCTTTTATAGCACCGCAGCATCCCAGGAAGCCCAGAATCATGATGATGGCACCTACAGCAATCAATATGTCCACAGCAACGTAGGAGCTAGAGCCTACATCTTCAGAACCAAAAATCTGAAGTAAAAAAGAGATTAATGGCAGAAAATTTATTTCCTTGAAGTTTATTTTGCTCATTCAACAAATATCCATTGAGTGCCTCCTATGTGTCAAGTCCTGTGCCAGGACCCTGAAATACATCAGTGATCTTAAAAAGTACAAATCCTTGCCCTCATGGAGCTCACATTCTATTGAAGTGCTTATATTTTTCTAAAATGATATGATGAAAGCTGGGTGGAAGAAATGTAATAGGTTTTTTTAAACCGTATTTTTAAAAGCTTAGGACAGTTACTTTTACTCTTCTTGATGTAATCTTTGGTTCACATATTTTGTGTATTCTATATAAAGTGCATTATAAAAGCATGTGTTGTTATGGTTTTTAATTCTTTAAAAAGTTCAAGCTCTTTAAACTATTGATAGACACAACAATATGAATTAATTTCAGAGTCATTATGCTGAGCTAAAGAAGCCATAGAAAAAAGTAAATACTGTATGATTCCATTTCTATAAAGTTCAATCATAAGCAAAACTATGGTTATAAAAATCAAAGCAGTGCTTGACTTTGAGCAAGGCAGAAGGGAAAGCAAGAGTTAACTGAAAAGGGACATGAGGGAACTTCCATGGGTTAATAAAAATGCTTTGTATCCTCATTAAAAAGAAATCCAGTTCCTGATATTTCATATCTATTTTATCTCTTTGTTCCCAAAAGCCATAGTCCATAGAGTCATCTAGAAACTCTATTTTGACTGTTAGTTAATGAGATATGAAGGGAAAAAAAATCCTAGAGCCCTTTATAGTGGGTGGGCTACCCATCAGGCATAATTCAGTTCTCCCAACAACACACACATACTCGTCTTCATCACCCTCATAACACTTAGCCTCAGCCACCTCTTGTCCTCGATAAGTGGATTTATCCAGAAGTAAATCACAATTAAAAAGTAAAGCCTTGTGCGTGTCTTATGCATAAATCCTATATGTAGCCCATTTGCCTTCTATAACCTCTATCTACTGGGCTGTCTCTAGATAGAGCACTAGTTCCTAGACTAACTCGAAACCTCTGCCTCCCAGAATGGGCTATATAGCATGTAGGTCAGCTCCCTTAACAGTCAATACAAAAATGAC'
const exampleSeq2 = 'AGCACTTTGGGAAGGCTAAGGCGGGGTTGATCACCTGAAGGTCAGGAGTTCCAAGACGCAACCTTAACCACATGGTGAAGACTCCTGTCTCTACTAAAAAAATACAAAAATGAAGCCGGGCGGTGGTTGGCGCATGTTCTTGTAAGTCTCAGCTAACTGCAGGAAGGCTTTGAGACGGAGAATCAGTTGAACCCGGGAGGCAGAAGGTTGCAAGCGAGCCAAGATTTTGGGCGCCACTGCACTACCAGCCTGGGTGGACAGAAGCAGACTTCCTGTCCCCCCCCAAAAAAAAGGGGGGAGAGAGGAGAGAAAAAGAGAGGAGAATTGCGCAGACAACACTACGTTTTTAAATGGTAAAATGGAAAATTGAATTAAAACTATTATTCGGATGAGCTCATTCGAGGCTTAACCTTGTTCATAAATGTATCTTCTTAATTTTTCTCTCCTTCAAAACTGCTGTCAGAACTTTGTTTATGAAAGCGAGAAAAGTAATGTTACAAAATATCTTTAGATTTTTCTTATTGCAGTGGGAAACCAGAAATATCAATCAAAATCGCAAAATGGAGAACATTTTTCATCTTTAAGGAAGATGTTAAAAACTAAACAAACACAGAAGAAACTTAATGCAAACTTCTTTTAAAAATGAACAATGATTCTAAATTACCGTCTTCTTGAAACACAATTTATGGCTTTTCCTGGAATTGTTTTTTTTCACTTTCCCCTGTGGCGCTGCAAAGCTTTGTGTTTTCCCATTAGAGGAGTTTTTTCATTCACAATGCGATGCAAGACTGAAAATTGAAAAGTATTTTACATTATTTTACGCCACAAAAGGTAGTATTCAATTTTTTTCAAACTTCTTCCAAAAATTTTTGCAAAAACATCCCTTTGTGGCAAACACACCTTAAGATTTTTGAAAAACAGTCTCCTAGGAAACCTTGTTCGCCAACCTGCAGGAAGCAGGATCAAGAAAGCAAGCCTATGAAAAAACTGAAGAAGGAGAAAAGAAATTACATTATCCTCAAAGTGGCATTGAAGTACATCTTGGGGAATTTCTGGCAAACAGCACTTCTCTTAACAGCTTGGATTATATCACAGTTTGAGAGGCAGTCACACCTTTTTCAATTTATTTCCACTTTTTTTAAAAACTTCCAAGCTGAAAAATTTTGGGTTCATTTATATCAGAAAAATTTGCTGCCAGAGAACTGGAGTTCCGAGGAAAGTTGGTTTATTCAGGCCAAAAAAAATTATGCAAAAACAACCATTTGATAATTCTGTATGAATAATTGACTTGAGGGAAAAGTTTGAAATTAGAAAATGAGTTTTATTTGAGTATTATTTTTAGCTCCTTGTCCCTTTCTTCAATCAAAACACACCTCAACAAACAAACTCCAGAATTGGCTTTGAAAACGCATCTCCACTACATTCAGAATCACCTGGCAAATCTGTTTACAATATAATGATTTCCCTGAAAATCGGGCTTCAAAGATATGCTGAATCCATAAGTTTTTGAAGGAATGCAAGCCCAAAGGACATTAGCTTTTTTTTTTTTTTAACAAGCTTCCTTTGAGTAATTAAAATTTCTTCAATTGGGCAAAATGAAGGCCTTATTGTTTTTCAAAAAAGCAATCAAAGTAGGAATGTTATTGAGTCCCTTTTAAAACTCTGTCCCTCCTTACCGTCCTTCACAATAAACAAACAGTTTTTGAACATTTTTTCTCCAGGTACGTGATAATAAATCCTTAACTTTATTAGAGGAATAAGTTTTTAGATTAGAACCTTGATTAAACTTTTATGTCATAATTTGTATTCTGGAATTAAACACTGATTTTTTTCCTTTAAATATTTTTACTTATATCCATTTTTCTAACTGTTATTGTTAAAAAGTGGAATGCCTGTGAATTATCCAAACCCGCAATTTTATCTCCCTCCAATTGGCTTCTTCTTTAAGAAGATTATTTCATGAATTATCTCAATTCATTTAAACTTTTTTTTAGCATGGCGCAATGTAGAACACCTTATGATTTACACACCCACACTTGGAATTCCATCTTCCATCATTTACTGGAAAACAGTTTTGCCGTCCTGCCCCTTGGCCATAACCCAAGGCTTCTCAGTTCCCAACACACCAGCCACTGTTACTGCACGATTGTCTTGTTCCGGAAAAGCTTTTCCTACCCCCTCCTCAATACAAATACCTTATTCCACTTCTGCCCTTGGTTATGAAAAATCCCAATCCCCCCTTAGTGGTCTTTTGCCCTTTTTGGCTTCTGGGGGCCACTTTCCACTGTAGCTATTTGCTTACTTATTAAAACCTTCCCTAGTAGGTTCTAAAAGGTCTTATGTATTAATTTCGCACAATATCTGAAACACATAGAAGGGTATGGCAAAGTTAAATGTTGAATGAAGTGAAGAATGAATGGATGAAATGGATTAAAATTTGTTCTCCTCTTTCAGAGTATCCTCAGTTTCCTTAAAAGCCAAAACTAAGCCAAATCTAAGCCATAAGTCAGCTTCCCCACAATCAAACCTTCTAAAAGAGAAAAGTTGGAAGTTAGAGTTTTTTCAATCAATCAATGGCACGTTTCTTTTTAACAGACAATTAGGGATGGGAAGAAAGAATCATTCTGGAAAAAGTCTGAAGGTTGGGAAACCACTGGGGAAATTTTGTTTTTGGAGAACTTTCAAAACCAACAGAAGCCAATTGCAGCCGACTTTTCTTTATAGCAACCGGCAGCGCATGCCCAGGAAGCCCAAGAAATCATGAATGATTGGCAACCTAACAGCAAATTCAATATGTTCCCACAGCCAACGTAGGAGCTAGAAGCCCCTTACAATCTTCAAGAAACCAAAAATCTGAAGTAAAAAAAAAAGATTTTAAATGGCAAGAAAATTTATTTCCTTGAAAAGTTTATTTTTTGCTCATTCAACAAATATCCATTGAAGTTTGCCTCCTATGTGTCAAGTCCTGTGCCCAGGACCCTGAAATTCATCCTTCATTTCATTTCAATCATTCATTTTTCATACATTCAAACCATTACTAGCCATACTTCTATGTGGTCCGATTATTTGTGGCGAAATTAATACATAAGACCTTTTAGAAAACCCTACTTAGGGAAGGTAATAAAGTAGCAAATAGCTTTTACAGTGGGGAGTGGCCCCAAGAAGGCAAAGGGCAAGACAGGGGAAATGGGAATTTTCAAAACCAGGGCCAGAAAGTGAAATTAAGGGTATTTTGTATGAGGTGAGGGTAGGAAAAAAGCTTTCCGGAAAGAACAAACGTTGGCAGTAACAGTGGGCTGGTGTGTTTTGGGAACTGGAGAAGCCTTTGGGTTATGGCAAGGAGACCGCAAAACTGGGTTTCCAGTAAAAATGATTGGAAAGATTGAATTCCAAGTGTGGGTTTGGGGTAAAAATTCATGGTGTTCTAACATGCCATGCTAAAAAAAAAGTTATTTAAATGAAATGAAGATTCAATCCAGAAATTATCTCTTAGAGAGGCATTGAGGAGGAATAAATTGGGTTTTGGATAATTCGACAAGGCATTTCACTTAAAAAGGTTACAAATTTGAATCTTAAAAAGTCACAAAATCCTTTGCCCTCATGGAGCCTCACAATTCTATTGAATTTGCTTAATTATTTTTCTAAATGAAAATAATGAAAAAAAAAAAATGAAGCTGGGGTTGGAAGAAATGTAAAAATGGTTTTTTTTTTTTTTAAATGTAATTTTTTTAAAAAACTTAGGAACAGTTTATTTTACTTCTTGCTTGATGTAAATTCTTTGGTTCAACAATTTTGTGTATCTATATACAAGTGCAATTAATAAAAGCCTGTGTTGTTATGGTTTTAATTCTTTAAAAAAGTTTTCAAAGGCTCTTTAAACTATGATAGACAACACAATATGAATTAAATTTTTCAGAGCATTATGCTGAAAGCTAAAGAAGCCATAGAAAAAAGTAAATAATGTATTGATCCCAATTTTCTATAAAAGTTCAATCATAAGCAAAACTATGGGGTTTTTATAAAAAAATCAAAGCAATGGCTTGACTTTTGAGCAAGGCAGAAGGGAAAAGCAAGAAAGTTAACTGAAAAAGGGACATGAGGGAAAAACTTCCATGGGGTTTTTAATAAAAATGCCTTTGTATCCTCAATTAAAAAAGAAATCCAGTTTCCTGGAATATTTTTCAATAATCTATTTTTATCTCTTTGTTTTGCCCAAAAGCCAATAGTCCATGAGAGTCATCTTAGGAAAACCTCTATTTTTTGACTGTGTAGTATAATGAGAATAATGAAAGGGAAAAAAAAATCCTAGAAGCCCTTTATTAGTGGGGGTGGGCTTACCCCATTTCAAGGCAATGAATTAAGTTCTCCCAACAACACAACATATCGTCTTCAATCACCTCATAACAACTTACCTCAGCCACCTCTTTTGTCCTGATAAGTGGGATTTATCCAGAAGTAAAATCAAATTAAAAAGTAAAAGCTTTGTGCGTGTCTTAAGCAAATCAAAATTCCTATATGTAGCCCCATTTCCTTCTTATAACCTCTATCTATGGGGCTGTCTCTAGATACGAGCACTTAGTTTTCCCTAGACTAACTCGAAAAAACTCTTGCCTCCCAGAATGGGCCTTTATAATACGCATGTAAGTCAGCTTTCCCCTTAACAGTCAATACAAAAATGAC'

function loadExample() {
  textareaReference.innerText = exampleSeq1
  textareaQuery.innerText = exampleSeq2
  inputK.value = '8'
  run()
}
